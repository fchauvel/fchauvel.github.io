<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>review on Franck Chauvel</title>
    <link>//fchauvel.github.io/tags/review/</link>
    <description>Recent content in review on Franck Chauvel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="//fchauvel.github.io/tags/review/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writing Effective Use-cases, by A. Cookburn</title>
      <link>//fchauvel.github.io/2020/11/29/writing-effective-use-cases-by-a.-cookburn/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>//fchauvel.github.io/2020/11/29/writing-effective-use-cases-by-a.-cookburn/</guid>
      <description>Use cases? Uh &amp;hellip; isn&amp;rsquo;t it one of those UML diagrams with stickmen, boxes, and bubbles? There is more to it, and &amp;ldquo;Writing Effective Use-cases&amp;rdquo; by A. Cockburn is the place to start.
I am always unsure about how much requirement I need, especially when building prototypes? So, reading about use-cases, I came across it on M. Fowler&amp;rsquo;s post on his &amp;ldquo;Use Cases&amp;rdquo;. It still costs about 30 EUR on Amazon, but I went for it anyway.</description>
    </item>
    
    <item>
      <title>Software Architecture in Practice, by L. Bass</title>
      <link>//fchauvel.github.io/2020/11/08/software-architecture-in-practice-by-l.-bass/</link>
      <pubDate>Sun, 08 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>//fchauvel.github.io/2020/11/08/software-architecture-in-practice-by-l.-bass/</guid>
      <description>Why should you read about Software architecture? Who even cares in these Agile and DevOps times. Should you, for whatever reason, still be interested, this book is a good place to approach software architecture from its theory side.
Here comes a book I had on my reading list for decades: Software Architecture in Practice, by L. Bass, P. Clements, and R. Kazman. I should have read this one when I was a PhD student, but I guess I was too lazy by then.</description>
    </item>
    
    <item>
      <title>Clean Architecture, by R. Martin</title>
      <link>//fchauvel.github.io/2020/11/01/clean-architecture-by-r.-martin/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>//fchauvel.github.io/2020/11/01/clean-architecture-by-r.-martin/</guid>
      <description>Does software architecture sound like a vague philosophical idea, disconnected from the practicalities of programming? Yes? This might be a good read.
I liked Clean Code and The Clean Coder by R. Martin, I felt tempted to read this other volume about software architecture. While I had been hesitating for some time, reading just enough software architecture by G. Fairbanks revamped my interest, and I took the (tiny) plunge. Besides, I got to try the Amazon Kindle for the first time, and I liked it!</description>
    </item>
    
    <item>
      <title>How to take smart notes, by S. Ahrens</title>
      <link>//fchauvel.github.io/2020/10/24/how-to-take-smart-notes-by-s.-ahrens/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>//fchauvel.github.io/2020/10/24/how-to-take-smart-notes-by-s.-ahrens/</guid>
      <description>Do you feel that you never have any idea or that your ideas are irrelevant or impractical? This book tells how to generate ideas by reading and taking notes!
Yet another book that Goodreads.com recommended. I always felt my notes taking is inadequate: In meetings, I often note only the irrelevant. But this is not about writing meeting minutes. It is about taking generating ideas by taking notes while reading—as the subtitle says.</description>
    </item>
    
    <item>
      <title>Designing Data-intensive Applications</title>
      <link>//fchauvel.github.io/2020/10/17/designing-data-intensive-applications/</link>
      <pubDate>Sat, 17 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>//fchauvel.github.io/2020/10/17/designing-data-intensive-applications/</guid>
      <description>Are you lost in the jungle of (big-)data technologies? Are you wondering how the Flink, Spark, Hive, Pig, Airflow and the likes fit together? Then this is the right book!
I found it as a recommendation on Goodreads.com. I wanted to learn about data technologies as I work more and more on this and I felt it was a good match: It was recent enough (2017), and was available on Google Play within my budget (EUR 12).</description>
    </item>
    
    <item>
      <title>Just Enough Software Architecture</title>
      <link>//fchauvel.github.io/2020/09/26/just-enough-software-architecture/</link>
      <pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>//fchauvel.github.io/2020/09/26/just-enough-software-architecture/</guid>
      <description>If just like me, you lost faith in models and model-driven engineering (MDE) a long time ago, this book might help. It shows how to reconcile architecture and modelling with agility and maintaining real software.
Just enough software architecture advocates modelling software until we feel confident enough to proceed with writing code. That is, if some technical risks (availability, maintainability, etc.) are not yet under control, then we should (re-)think how architectural decisions that could help.</description>
    </item>
    
    <item>
      <title>How to win friends and influence people by D. Carnegie</title>
      <link>//fchauvel.github.io/2020/09/11/how-to-win-friends-and-influence-people-by-d.-carnegie/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>//fchauvel.github.io/2020/09/11/how-to-win-friends-and-influence-people-by-d.-carnegie/</guid>
      <description>Are you struggling to convince people, to get them to say yes, this book by D. Carnegie might be for you.
D. Carnegie proposes a catalogue of tips and tricks to better deal with people, including how to make people like you, how to win people to your way of thinking and, how to be a leader. These range from very simple things like smiling, to more skilful techniques such as asking questions instead of arguing (the Socratic method).</description>
    </item>
    
    <item>
      <title>The Life of Benjamin Franklin by M. L. Weems</title>
      <link>//fchauvel.github.io/2020/09/01/the-life-of-benjamin-franklin-by-m.-l.-weems/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>//fchauvel.github.io/2020/09/01/the-life-of-benjamin-franklin-by-m.-l.-weems/</guid>
      <description>We all know Benjamin Franklin — even I knew his name and inventions. But do you know the person he was, how he lived and who he aimed at?
This one was initially published in 1817 and was digitized the Google Book Search program. The original title is a bit of a mouthful: &amp;ldquo;The Life of Benjamin Franklin, written chiefly by himself, with a collection of his essays, humorous, moral and litterary.</description>
    </item>
    
    <item>
      <title>How I raised myself from failure to success in selling by F. Bettger</title>
      <link>//fchauvel.github.io/2020/08/21/how-i-raised-myself-from-failure-to-success-in-selling-by-f.-bettger/</link>
      <pubDate>Fri, 21 Aug 2020 07:38:22 +0200</pubDate>
      
      <guid>//fchauvel.github.io/2020/08/21/how-i-raised-myself-from-failure-to-success-in-selling-by-f.-bettger/</guid>
      <description>If you ever wondered how a baseball player can become a successful saleman, this book is for you?
Franklin L. Bettger (1888 – 1981) explains how he transition from baseball to sales, sucessfully. In this text published in 1947, he gather &amp;ldquo;tatics&amp;rdquo; that helped him eventually succeeed. He covers general ideas that helped him sell more, ways he won confidence, tricks he used to induce other to do business for him, tips on how he approached sales, and finally, how he overcame failures.</description>
    </item>
    
    <item>
      <title>The Reviews I Wish to Get</title>
      <link>//fchauvel.github.io/2016/11/16/the-reviews-i-wish-to-get/</link>
      <pubDate>Wed, 16 Nov 2016 14:49:59 +0100</pubDate>
      
      <guid>//fchauvel.github.io/2016/11/16/the-reviews-i-wish-to-get/</guid>
      <description>As a researcher, I submit research articles for peer-review. The reviews I get are unfortunately too often deceptive—not only because most are rebuttals. These reviews are of very little use, beyond improving my broken English.
Below are the key points I wish reviewers would discuss. As a matter of fact, I do also consider them when I write reviews. While I am aware of the time it takes to write a detailed review, I am convinced that it does help moving research in the right direction.</description>
    </item>
    
  </channel>
</rss>